#!/bin/sh

#
# swupdate - check and perform OpenBSD software updates
#
# CHANGE LOG:
#
# v0.1   - 2019-08-21 - Morgan Aldridge <morgant@makkintosshu.com>
#                       Initial version.
# v0.2   - 2020-12-21 - Morgan Aldridge
#                       Prompt to reboot after install if kernel was changed.
# v0.3   - 2021-02-26 - Morgan Aldridge
#                       Install firmware updates prior to syspatches. Safer
#                       check for root.
#
# LICENSE:
#
# Copyright (c) 2019-2021 Morgan Aldridge
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

tool="$(basename "$0")"
verbose=false

usage() {
  echo "Usage: ${tool} [-v] [-l | -i]"
}

# parse arguments
args=$(getopt vhldi $*)
if [ $? -ne 0 ]; then
  usage
  exit 2
fi

set -- $args
while [ $# -ne 0 ]; do
  case "$1" in
    "-h")
      usage
      exit
      ;;
    "-l"|"-d"|"-i")
      flag="$1"
      ;;
    "-v")
      verbose=true
      ;;
    "--")
      shift
      break
      ;;
  esac
  shift
done

# require root
if [ $(id -u) -ne 0 ]; then
  echo "${tool}: need root privileges"
  exit 1
fi

case "$flag" in
  "-l")
    # list pending updates
    if $verbose; then echo "Checking for firmware updates..."; fi
    fw_update -i
    if $verbose; then echo "Checking for system patches..."; fi
    syspatch -c
    if $verbose; then echo "Checking for updated packages..."; fi
    pkg_add -sxu
    ;;
  "-d")
    # download, but don't install pending updates
    if $verbose; then echo "Downloading firmware updates..."; fi
    fw_update -n
    if $verbose; then echo "Downloading package updates..."; fi
    pkg_add -nxu
    ;;
  "-i")
    # install pending updates   
    if $verbose; then echo "Installing firmware updates..."; fi
    fw_update
    if $verbose; then echo "Installing system patches..."; fi
    syspatch && find /bsd -mmin -15 > /dev/null && reboot=true || reboot=false
    if $verbose; then echo "Installing package updates..."; fi
    pkg_add -xu
    if $reboot && read now?'A reboot is necessary. Reboot now (y/n)? ' ; then
      case "$now" in
        Y|y)
          echo "Rebooting..."
          reboot
          ;;
        *)
          echo "Please remember to reboot!"
          ;;
      esac
    fi
    ;;
esac
